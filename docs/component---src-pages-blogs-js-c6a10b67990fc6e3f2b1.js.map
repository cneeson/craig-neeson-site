{"version":3,"sources":["webpack:///./src/components/Tag/Styled.js","webpack:///./src/components/Tag/Tag.js","webpack:///./src/components/Tag/index.js","webpack:///./src/components/BlogList/Styled.js","webpack:///./src/components/BlogList/BlogList.js","webpack:///./src/components/BlogList/index.js","webpack:///./content/blog/externalBlogs.js","webpack:///./src/pages/blogs.js"],"names":["StyledTag","styled","div","withConfig","displayName","componentId","_ref","background","_ref2","color","Tag","text","children","React","createElement","Wrapper","BlogCard","Link","Title","h3","PreviewText","p","TagContainer","BlogList","props","blogs","length","map","node","title","frontmatter","fields","slug","destination","isExternalBlog","href","externalUrl","target","to","Object","assign","key","isNote","date","timeToRead","dangerouslySetInnerHTML","__html","excerpt","isPublished","byDate","a","b","moment","format","formatDates","_objectSpread","BlogIndex","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","siteTitle","site","siteMetadata","allMdx","edges","sortedBlogs","concat","_toConsumableArray","externalBlogs","sort","Layout","location","SEO","lang","keywords","Component"],"mappings":"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","file":"component---src-pages-blogs-js-c6a10b67990fc6e3f2b1.js","sourcesContent":["import styled from 'styled-components'\n\nexport const StyledTag = styled.div`\n    background: ${({ background }) => background || 'lightgray'};\n    color: ${({ color }) => color || 'grey'};\n    display: inline;\n    padding: 0.2rem 0.5rem;\n    border-radius: 4px;\n`;\n","import React from 'react'\nimport { StyledTag } from './Styled';\n\nfunction Tag({ color, background, text, children }) {\n    return (\n        <StyledTag background={background} color={color}>{children || text}</StyledTag>\n    )\n}\n\nexport default Tag\n","import Tag from './Tag'\n\nexport default Tag","import styled from 'styled-components'\nimport Link from '../Link'\n\nexport const Wrapper = styled.div`\n    margin-top: 2.5rem;\n\n    @media (max-width: 650px) {\n        margin-top: 5rem;\n    }\n`\n\nexport const BlogCard = styled(Link)`\n    display: block;\n    text-decoration: none;\n    color: hsla(0,0%,0%,0.9);\n    background-color: white;\n    padding: 2rem 2rem;\n    border-radius: .5rem;\n    box-shadow: 5px 5px rgba(193, 0, 111, 0.22), -5px -5px rgba(96,74,204,0.12);\n    margin-bottom: 2rem;\n    transition: .1s all;\n\n    &:hover{\n        box-shadow: 6px 6px rgba(96, 74, 204, 0.26), -6px -6px rgba(193, 0, 111, 0.28);\n        background-color: #f2f2f3;\n        transform: scale(1.02, 1.02);\n    }\n\n    &:active {\n        transform: scale(1, 1);\n    }\n`;\n\nexport const Title = styled.h3`\n    color: #ff007d;\n    margin: 0;\n`;\n\nexport const PreviewText = styled.p`\n    margin: 0;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n`;\n\nexport const TagContainer = styled.div`\n    margin: 0.5rem 0;\n`;","import React from 'react'\nimport Tag from '../Tag';\nimport { Wrapper, BlogCard, Title, PreviewText, TagContainer } from './Styled';\n\nconst BlogList = (props) => {\n  return (\n    <Wrapper>\n      {\n        props.blogs.length > 0 ? props.blogs.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n\n          const destination = node.fields.isExternalBlog\n            ? { href: node.fields.externalUrl, target: '_blank' }\n            : { to: node.fields.slug };\n          \n          return (\n            <BlogCard key={node.fields.slug} {...destination}>\n              <Title>\n                {title}\n              </Title>\n              <small>{node.frontmatter.isNote}</small><small>{node.frontmatter.date}</small> - <small>{node.frontmatter.timeToRead} read</small>\n              {node.frontmatter.isNote && (\n                <TagContainer>\n                  <Tag color=\"rgba(96,74,204,0.6)\" background=\"rgba(96,74,204,0.12)\">Personal Note</Tag>\n                </TagContainer>\n              )}\n              <PreviewText dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </BlogCard>\n          )\n        }) : <h2>No blogs</h2>\n      }\n    </Wrapper>\n  )\n};\n\nexport default BlogList","import BlogList from './BlogList';\n\nexport default BlogList","export default [\n    {\n        node: {\n            slug: 35,\n            isPublished: false,\n            frontmatter: {\n                title: 'Balancing design constraints and developer experience in React Component Libraries',\n                isNote: false,\n                date: '2019-09-05T23:59:59.121Z',\n                timeToRead: '7 minute',\n\n            },\n            fields: {\n                isExternalBlog: true,\n                externalUrl: 'https://community.flexera.com/t5/Flexera-Engineering-Blog/Balancing-design-constraints-and-developer-experience-in-React/ba-p/114181',\n            },\n            excerpt: `One of the greatest challenges for Flexera's UI developers has been writing frontends that look and behave consistently across the entire product portfolio. In 2019, Flexera's UI and UX teams have worked in collaboration to release a comprehensive suite of React components that can be used to unify the company's products.`\n        }\n    }\n];\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport moment from 'moment';\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport BlogList from '../components/BlogList';\nimport externalBlogs from '../../content/blog/externalBlogs';\n\nconst byDate = (a,b) => new moment(b.node.frontmatter.date).format('YYYYMMDD') - new moment(a.node.frontmatter.date).format('YYYYMMDD');\n\nconst formatDates = ({ node: { frontmatter, fields, excerpt } }) => {\n  const newFrontmatter = {\n    ...frontmatter,\n    date: moment(frontmatter.date).format('MMMM DD, YYYY')\n  };\n\n  return {\n    node: {\n      frontmatter: newFrontmatter,\n      fields,\n      excerpt\n    }\n  };\n};\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const blogs = data.allMdx ? data.allMdx.edges : []\n\n    const sortedBlogs = [...blogs, ...externalBlogs]\n      .sort(byDate)\n      .map(formatDates);\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          lang=\"en\"\n          title=\"Blog\"\n          keywords={[`craig`, `neeson`, `craig neeson`, `blog`, `developer`, `northern ireland`, `NI`, `belfast`, `gatsby`, `javascript`, `react`]}\n        />\n        <BlogList blogs={sortedBlogs} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(filter: { frontmatter: { isPublished: { eq: true } } }, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            timeToRead\n            isNote\n            isPublished\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}